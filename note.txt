publicKey : khi được generate bởi thuật toán bất đối xưng
    -> key đang dưới dạng Buffer (chưa được hash)
    => phải chuyển về string

Khi đoạn code bị lặp 2 lần trở lên => phải chuyển đổi viết Utils.

== Authetication ==
+) x-api-key    : phân quyền và cho phép truy cập vào hệ thống.
+) x-client-id  : Who ?
+) authorization: chìa khóa - accessToken
    x-api-key -> apiKey -> permission 
    x-client-id ? -> User -> KeyStore
    authorization -> accessToken            => JWT.verify(accessToken, KeyStore.publicKey)

== Request ==
+) keyStore
+) user {userId, email}
+) refreshToken
+) shopId <=> userId

1. Tạo ra "key-permission" trước.
    +) Key          : đại diện cho mỗi 1 Shop.
    +) permission   : quyền hạn đối với Account.

2. Gán "key-permission" vào Headers - khi tạo Account cho Shop/Doanh nghiệp.
    -> Create Account

3. Login.
    +) Mỗi lần login -> tạo ra 1 "refreshToken mới" và save refreshToken cũ vào refreshTokensUsed (đã sử dụng)


checkout - review -> truoc khi 'order' (dat hang : reservation)

Ton kho qua ban -> su dung acquireProduct - khoa lac quan

Order :
    1 - checkout review -> success
    2 - create 'key' for req -> update inventory_reservation
        (ai nắm giữ 'key' - được thực thi các công đoạn sau đó)
    3 - create new order
    4 - remove product in cart